#!/bin/sh
# $Id: ec2-condor-collector,v 1.1 2010/03/03 17:24:39 phil Exp $
#
# chkconfig: 2345 29 40
# description: EC2 Condor Pool Extension
#
# interprets user-supplied instance data of the form
# condor:<name of collector>:lowport:highport
# eg. ec2-run-instances  -d "condor:landphil.rocksclusters.org:40000:40050"
#      will cause condor client to report to collector and use ports 40000 - 40050
. /etc/rc.d/init.d/functions

RETVAL=0

set_condor_collector() {
# Fetch metadata information 
publicIP=`curl http://instance-data.ec2.internal/latest/meta-data/public-ipv4 2>/dev/null`
publicHostname=`curl http://instance-data.ec2.internal/latest/meta-data/public-hostname 2>/dev/null`
privateIP=`curl http://instance-data.ec2.internal/latest/meta-data/local-ipv4 2>/dev/null`
privateHostname=`curl http://instance-data.ec2.internal/latest/meta-data/local-hostname 2>/dev/null`
instanceData=`curl http://instance-data.ec2.internal/latest/meta-data/user-data 2>/dev/null`
#
# Example instance data
# instanceData="condor:landphil.rocksclusters.org:40000:40050"
#
condorData=`echo $instanceData | grep "condor" `
if [ "x$condorData" != "x" ]; then
	collector=`echo $condorData | awk -F: '{print $2}'`
	lowport=`echo $condorData | awk -F: '{print $3}'`
	highport=`echo $condorData | awk -F: '{print $4}'`
	privateDomain=`echo $privateHostname | cut -d . -f 2-`
	publicDomain=`echo $publicHostname | cut -d . -f 2-`

	condorLocal=/opt/condor/etc/condor_config.local

	echo "LOWPORT = $lowport" >> $condorLocal
	echo "HIGHPORT = $highport" >> $condorLocal
	echo "COLLECTOR_HOST = $collector" >> $condorLocal
	echo "COLLECTOR_SOCKET_CACHE_SIZE=1000" >> $condorLocal
	echo "UPDATE_COLLECTOR_WITH_TCP=True" >> $condorLocal
	echo "HOSTALLOW_WRITE = $collector,*.$privateDomain" >> $condorLocal
	echo "ALLOW_WRITE = \$(HOSTALLOW_WRITE)" >> $condorLocal
	echo "PRIVATE_NETWORK_NAME = $privateDomain" >> $condorLocal 
	echo "TCP_FORWARDING_HOST = $publicIP" >> $condorLocal 
	echo "PRIVATE_NETWORK_INTERFACE = $privateIP" >> $condorLocal 
	echo "NETWORK_INTERFACE = $privateIP" >> $condorLocal 
fi
}
case "$1" in
   start)
	echo -n "Setting Up Remote Condor Collector"
	set_condor_collector
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] 
	;;

  stop)
      echo -n "Remote Condor Collector "
	[ $RETVAL -eq 0 ]
	;;

  restart|reload)
   	$0 stop
   	$0 start
   	RETVAL=$?
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $RETVAL

